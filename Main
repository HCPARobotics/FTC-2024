package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.Servo;

@TeleOp(name = "LeftRightDriveIntakeArmWrist", group = "Linear Opmode")
public class LeftRightDriveIntakeArmWrist extends LinearOpMode {

    DcMotor leftDrive, rightDrive;
    DcMotor armMotor;
    DcMotor wristMotor;
    Servo intakeServo;

    @Override
    public void runOpMode() {
        leftDrive = hardwareMap.get(DcMotor.class, "left_drive");
        rightDrive = hardwareMap.get(DcMotor.class, "right_drive");
        armMotor = hardwareMap.get(DcMotor.class, "arm_motor");
        wristMotor = hardwareMap.get(DcMotor.class, "wrist_motor");
        intakeServo = hardwareMap.get(Servo.class, "intake_servo");

        rightDrive.setDirection(DcMotor.Direction.REVERSE);
        armMotor.setDirection(DcMotor.Direction.FORWARD);
        wristMotor.setDirection(DcMotor.Direction.FORWARD);

        waitForStart();

        while (opModeIsActive()) {
            double leftPower = -gamepad1.left_stick_y;
            double rightPower = -gamepad1.right_stick_y;
            leftDrive.setPower(leftPower);
            rightDrive.setPower(rightPower);

            double armPower = -gamepad2.right_stick_y;
            armMotor.setPower(armPower);

            double wristPower = gamepad2.right_trigger;
            wristMotor.setPower(wristPower);

            if (gamepad1.a) {
                intakeServo.setPosition(1); // Full forward (continuous rotation)
            } else if (gamepad1.b) {
                intakeServo.setPosition(0); // Full reverse (continuous rotation)
            } else {
                intakeServo.setPosition(0.5); // Neutral (no rotation)
            }

            telemetry.addData("Left Power", leftPower);
            telemetry.addData("Right Power", rightPower);
            telemetry.addData("Arm Power", armPower);
            telemetry.addData("Wrist Power", wristPower);
            telemetry.update();
        }
    }
}
